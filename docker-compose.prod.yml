services:
  # API Server (Production)
  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: smartchat_api_prod
    restart: unless-stopped
    ports:
      - "51213:51213"
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-19102003}
      - DATABASE_NAME=smartchat_db
      - DATABASE_URL=postgresql://postgres:${DATABASE_PASSWORD:-19102003}@postgres:5432/smartchat_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-your-super-secret-refresh-key}
    networks:
      - smartchat_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:51213/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: smartchat_postgres_prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: smartchat_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-19102003}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - smartchat_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Production)
  redis:
    image: redis:7-alpine
    container_name: smartchat_redis_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - smartchat_network
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-}", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: smartchat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - smartchat_network
    depends_on:
      - api

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  smartchat_network:
    driver: bridge
