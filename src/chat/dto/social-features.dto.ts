import { IsString, IsOptional, IsArray, IsEnum, IsBoolean, IsUrl, MaxLength, IsUUID } from 'class-validator';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import { FriendRequestStatus, StatusType, ActivityType } from '../domain/enums';

export class SendFriendRequestDto {
    @ApiProperty({
        description: 'ID c·ªßa user mu·ªën k·∫øt b·∫°n',
        example: 'user_id_123'
    })
    @IsUUID()
    userId: string;

    @ApiPropertyOptional({
        description: 'Tin nh·∫Øn k√®m theo l·ªùi m·ªùi k·∫øt b·∫°n',
        example: 'Xin ch√†o! T√¥i mu·ªën k·∫øt b·∫°n v·ªõi b·∫°n.',
        maxLength: 200
    })
    @IsOptional()
    @IsString()
    @MaxLength(200)
    message?: string;
}

export class RespondFriendRequestDto {
    @ApiProperty({
        description: 'Ph·∫£n h·ªìi v·ªõi l·ªùi m·ªùi k·∫øt b·∫°n',
        enum: ['ACCEPTED', 'DECLINED', 'BLOCKED'],
        example: 'ACCEPTED'
    })
    @IsEnum(['ACCEPTED', 'DECLINED', 'BLOCKED'])
    response: 'ACCEPTED' | 'DECLINED' | 'BLOCKED';
}

export class UpdateStatusDto {
    @ApiProperty({
        description: 'Lo·∫°i tr·∫°ng th√°i',
        enum: StatusType,
        example: StatusType.AVAILABLE
    })
    @IsEnum(StatusType)
    type: StatusType;

    @ApiPropertyOptional({
        description: 'Tin nh·∫Øn tr·∫°ng th√°i t√πy ch·ªânh',
        example: 'ƒêang l√†m vi·ªác üíª',
        maxLength: 100
    })
    @IsOptional()
    @IsString()
    @MaxLength(100)
    customMessage?: string;

    @ApiPropertyOptional({
        description: 'Emoji ƒë·∫°i di·ªán cho tr·∫°ng th√°i',
        example: 'üíª'
    })
    @IsOptional()
    @IsString()
    emoji?: string;

    @ApiPropertyOptional({
        description: 'Th·ªùi gian t·ª± ƒë·ªông clear status (ph√∫t)',
        example: 60
    })
    @IsOptional()
    autoClearAfter?: number;
}

export class UpdateActivityDto {
    @ApiProperty({
        description: 'Lo·∫°i ho·∫°t ƒë·ªông',
        enum: ActivityType,
        example: ActivityType.TYPING
    })
    @IsEnum(ActivityType)
    activity: ActivityType;

    @ApiPropertyOptional({
        description: 'ID chat ƒëang ho·∫°t ƒë·ªông (n·∫øu c√≥)',
        example: 'chat_id_123'
    })
    @IsOptional()
    @IsUUID()
    chatId?: string;

    @ApiPropertyOptional({
        description: 'Th√¥ng tin chi ti·∫øt v·ªÅ ho·∫°t ƒë·ªông',
        example: 'ƒêang ch∆°i Dota 2'
    })
    @IsOptional()
    @IsString()
    details?: string;
}

export class CreateStoryDto {
    @ApiProperty({
        description: 'N·ªôi dung story',
        example: 'H√¥m nay l√† m·ªôt ng√†y tuy·ªát v·ªùi! ‚òÄÔ∏è',
        maxLength: 500
    })
    @IsString()
    @MaxLength(500)
    content: string;

    @ApiPropertyOptional({
        description: 'URL media c·ªßa story',
        example: 'https://example.com/story-image.jpg'
    })
    @IsOptional()
    @IsUrl()
    mediaUrl?: string;

    @ApiPropertyOptional({
        description: 'Lo·∫°i media',
        enum: ['IMAGE', 'VIDEO'],
        example: 'IMAGE'
    })
    @IsOptional()
    @IsEnum(['IMAGE', 'VIDEO'])
    mediaType?: 'IMAGE' | 'VIDEO';

    @ApiPropertyOptional({
        description: 'Th·ªùi gian story t·ª± ƒë·ªông x√≥a (gi·ªù)',
        example: 24,
        default: 24
    })
    @IsOptional()
    autoDeleteAfterHours?: number = 24;

    @ApiPropertyOptional({
        description: 'Cho ph√©p ai reply story',
        enum: ['EVERYONE', 'FRIENDS', 'CLOSE_FRIENDS', 'NO_ONE'],
        example: 'FRIENDS',
        default: 'FRIENDS'
    })
    @IsOptional()
    allowReplies?: 'EVERYONE' | 'FRIENDS' | 'CLOSE_FRIENDS' | 'NO_ONE' = 'FRIENDS';
}

export class JoinGroupDto {
    @ApiPropertyOptional({
        description: 'Tin nh·∫Øn xin gia nh·∫≠p nh√≥m',
        example: 'Xin ch√†o! T√¥i mu·ªën tham gia nh√≥m n√†y.',
        maxLength: 200
    })
    @IsOptional()
    @IsString()
    @MaxLength(200)
    message?: string;
}

export class SearchDto {
    @ApiProperty({
        description: 'T·ª´ kh√≥a t√¨m ki·∫øm',
        example: 'javascript programming',
        maxLength: 100
    })
    @IsString()
    @MaxLength(100)
    query: string;

    @ApiPropertyOptional({
        description: 'Lo·∫°i t√¨m ki·∫øm',
        enum: ['ALL', 'USERS', 'GROUPS', 'MESSAGES'],
        example: 'ALL',
        default: 'ALL'
    })
    @IsOptional()
    @IsEnum(['ALL', 'USERS', 'GROUPS', 'MESSAGES'])
    type?: 'ALL' | 'USERS' | 'GROUPS' | 'MESSAGES' = 'ALL';

    @ApiPropertyOptional({
        description: 'S·ªë l∆∞·ª£ng k·∫øt qu·∫£ tr√™n m·ªói trang',
        example: 20,
        default: 20
    })
    @IsOptional()
    limit?: number = 20;

    @ApiPropertyOptional({
        description: 'S·ªë trang',
        example: 1,
        default: 1
    })
    @IsOptional()
    page?: number = 1;
} 