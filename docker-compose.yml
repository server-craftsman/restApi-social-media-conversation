services:
  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: smartchat_api
    restart: unless-stopped
    ports:
      - "51213:51213"
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=19102003
      - DATABASE_NAME=smartchat_db
      - DATABASE_URL=postgresql://postgres:19102003@postgres:5432/smartchat_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - AUTH_JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - AUTH_JWT_TOKEN_EXPIRES_IN=15m
      - AUTH_REFRESH_SECRET=secret_for_refresh
      - AUTH_REFRESH_TOKEN_EXPIRES_IN=3650d
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - APP_PREFIX=api
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:5173,http://localhost:51213,http://localhost:8080
      - CORS_ENABLED=true
      - CORS_ORIGIN=*
      - CORS_CREDENTIALS=true
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USER=huyit2003@gmail.com
      - MAIL_PASSWORD=tgob nbod eitn grpe
    volumes:
      - ./src:/app/src:delegated
      - ./prisma:/app/prisma:delegated
      - ./package.json:/app/package.json:delegated
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:delegated
      - ./tsconfig.json:/app/tsconfig.json:delegated
      - ./nest-cli.json:/app/nest-cli.json:delegated
      - node_modules:/app/node_modules
    networks:
      - smartchat_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:51213/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smartchat_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: smartchat_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 19102003
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - smartchat_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d smartchat_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartchat_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartchat_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander (Optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: smartchat_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - smartchat_network
    depends_on:
      - redis

  # pgAdmin (Optional - for PostgreSQL management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: smartchat_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@smartchat.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - smartchat_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  node_modules:
    driver: local

networks:
  smartchat_network:
    driver: bridge
